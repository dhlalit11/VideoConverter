# Code taken from https://medium.com/@myofficework000/automating-android-apk-aab-generation-with-github-actions-0910888de1b1
##
name: Generated APK (upload to artifact and release)

env:
  # The name of the main module repository
  main_project_module: demo

  # The name of the Store
  store_name: github

on:

  push:
    branches:
      - 'master/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        #run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        run : echo "repository_name=VideoCompressor" >> $GITHUB_ENV
      # Get Version Name from build gradle
      - name: Extract version name from build.gradle
        id: version
        run: |
          versionName=$(grep 'def appVersionNameString =' demo/build.gradle | awk -F\" '{print $2}')
          echo "VERSION_NAME=$versionName" >> $GITHUB_ENV


      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Decode and generate keystore.jks
      - name: Decode keystore and save to file
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > /home/runner/work/VideoConverter/VideoConverter/demo/keystore.jks

      # Run Build Project
      - name: Build gradle project
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew build

      # Create APK Debug
      #- name: Build apk debug project (APK) - ${{ env.main_project_module }} module
      #  run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

      # Delete keystore.jks after build is complete
      - name: Clean up keystore
        run: rm /home/runner/work/VideoConverter/VideoConverter/demo/keystore.jks

      # Rename apk with useful info
      - name: Rename APK
        run: |
          mv "${{ env.main_project_module }}/build/outputs/apk/release/demo-release.apk" "${{ env.main_project_module }}/build/outputs/apk/release/${{ env.repository_name }}-${{ env.store_name }}-${{ env.date_today }}-v${{ env.VERSION_NAME }}.apk"

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      #- name: Upload APK Debug - ${{ env.repository_name }}
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
      #    path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-${{ env.store_name }}-${{ env.date_today }}-v${{ env.VERSION_NAME }}
          path: ${{ env.main_project_module }}/build/outputs/apk/release/${{ env.repository_name }}-${{ env.store_name }}-${{ env.date_today }}-v${{ env.VERSION_NAME }}.apk

      # Upload apk to Release
      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.repository_name }}-${{ env.date_today }}-v${{ env.VERSION_NAME }}
          tag_name: v${{ env.VERSION_NAME }}
          files: ${{ env.main_project_module }}/build/outputs/apk/release/${{ env.repository_name }}-${{ env.store_name }}-${{ env.date_today }}-v${{ env.VERSION_NAME }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
